<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="~zhB;IP!~7h[}DxC!w(x">players</variable><variable id="[3FG~j%/iy4lX#zdkt~`">p</variable><variable id="|Md$@+BlYp,e9Co7Pc$h">q</variable><variable id="F*a`Hik_~O=mz^=Ec!D;">r</variable><variable id="vt5rNx;d=#(K)HK.y|9,">patientZero</variable><variable id="RDz6{CrOshK)HH`pO2zQ">state</variable><variable id="bV1d`(a?;`:{w$-mGgq/">master</variable><variable id="$~^;L44tXWd?FF!uYaM~">paired</variable><variable id=".Pb?gG-Rg#sj5(?U)=qF">signal</variable><variable id="(pv59ZEbM~)f)oMwmTv9">INCUBATION</variable><variable id="j!~$IrC8nxu0j)3pbnNa">DEATH</variable><variable id="LESQ_%l0I}?[6$xU!weL">RSSI</variable><variable id="VhCG-a*/5bYHRDmWUI|/">TRANSMISSIONPROB</variable><variable id="/LbQoh=DX[$OI.LKtmwR">playerIcons</variable><variable id="rtIIb|TCOh9DZF/]p$}D">infectedBy</variable><variable id="iosq;cE6MF7T`AaY?oZ-">playerIcon</variable></variables><comment id="v|le#.G)w4X.0-i`U$Z0" data="1" x="0" y="4225" h="120" w="160">master state</comment><block type="pxt-on-start" id="L#A!s:6}Y;MnHauF_XTo" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="PJ/]oc)-e+.AY%k}AdIT" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let infectedTime = 0" numlines="1" declaredvars="infectedTime"></mutation><comment pinned="false" h="80" w="160">local time when infection happened</comment><next><block type="typescript_statement" id="-OlxqG8q=RN*NE1NI,VU" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let paired = false" numlines="1" declaredvars="paired"></mutation><comment pinned="false" h="80" w="160">player state</comment><next><block type="typescript_statement" id="|7EV6AcSE8l;e~Q7X=53" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let players: Player[] = []" numlines="1" declaredvars="players"></mutation><next><block type="variables_set" id=":-ZwLK3vR,zEBR1q~xiH"><field name="VAR" id="(pv59ZEbM~)f)oMwmTv9">INCUBATION</field><comment pinned="false" h="80" w="160">time before showing symptoms</comment><data>0</data><value name="VALUE"><shadow type="math_number" id="LH]0TJ;@=pm;66uU*:OY"><field name="NUM">20000</field></shadow></value><next><block type="variables_set" id="vOn].jzDlZ_tN?mH^6cm"><field name="VAR" id="j!~$IrC8nxu0j)3pbnNa">DEATH</field><comment pinned="false" h="80" w="160">time before dying off the disease</comment><value name="VALUE"><shadow type="math_number" id="ik%2q*PJRPUZ|#bIM%g="><field name="NUM">40000</field></shadow></value><next><block type="variables_set" id="ni5xwt:h0nu7x6}3[HrK"><field name="VAR" id="LESQ_%l0I}?[6$xU!weL">RSSI</field><comment pinned="false" h="80" w="160">db</comment><value name="VALUE"><shadow type="math_number" id="s3Wnq@o|}L^F!*klNC:L"><field name="NUM">-45</field></shadow></value><next><block type="variables_set" id="X0dqQ-GzdVBsE/__q:qX"><field name="VAR" id="VhCG-a*/5bYHRDmWUI|/">TRANSMISSIONPROB</field><comment pinned="false" h="80" w="160">% probability to transfer disease</comment><value name="VALUE"><shadow type="math_number" id="E4w^u!nPI(0M]b3omcFF"><field name="NUM">40</field></shadow></value><next><block type="typescript_statement" id="FfRV/Xzxia(nPZJ/}?pt" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum GameState {" line1="    Stopped," line2="    Pairing," line3="    Infecting," line4="    Running," line5="    Over" line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="ACb-?10,1s`M{2$5Mf2=" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum HealthState {" line1="    Healthy," line2="    Incubating," line3="    Sick," line4="    Dead" line5="}" numlines="6"></mutation><next><block type="typescript_statement" id="kp_ZreR$B|7COkt}M+;," editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum MessageKind {" line1="    PairRequest," line2="    PairConfirmation," line3="    HealthSet," line4="    HealthValue," line5="    InitialInfect," line6="    TransmitVirus," line7="    GameState" line8="}" numlines="9"></mutation><next><block type="typescript_statement" id="=EEfY5.OxTXVR#D$^Dl!" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const GameIcons = {" line1="    Pairing: IconNames.Ghost," line2="    Paired: IconNames.Happy," line3="    Dead: IconNames.Skull," line4="    Sick: IconNames.Sad," line5="    Incubating: IconNames.Confused," line6="    Healthy: IconNames.Happy" line7="}" numlines="8" declaredvars="GameIcons"></mutation><next><block type="typescript_statement" id="^%CCFf#eiT-/cuWoG(}+" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Message {" line1="" line2="    private _data: Buffer;" line3="" line4="    constructor(input?: Buffer) {" line5="        this._data = input || control.createBuffer(13);" line6="    }" line7="" line8="    get kind(): number {" line9="        return this._data.getNumber(NumberFormat.Int8LE, 0);" line10="    }" line11="" line12="    set kind(x: number) {" line13="        this._data.setNumber(NumberFormat.Int8LE, 0, x);" line14="    }" line15="" line16="    get fromSerialNumber(): number {" line17="        return this._data.getNumber(NumberFormat.Int32LE, 1);" line18="    }" line19="" line20="    set fromSerialNumber(x: number) {" line21="        this._data.setNumber(NumberFormat.Int32LE, 1, x);" line22="    }" line23="" line24="    get value(): number {" line25="        return this._data.getNumber(NumberFormat.Int32LE, 5);" line26="    }" line27="" line28="    set value(x: number) {" line29="        this._data.setNumber(NumberFormat.Int32LE, 5, x);" line30="    }" line31="" line32="    get toSerialNumber(): number {" line33="        return this._data.getNumber(NumberFormat.Int32LE, 9);" line34="    }" line35="" line36="    set toSerialNumber(x: number) {" line37="        this._data.setNumber(NumberFormat.Int32LE, 9, x);" line38="    }" line39="" line40="    send() {" line41="        radio.sendBuffer(this._data);" line42="        basic.pause(250);" line43="    }" line44="}" numlines="45"></mutation><next><block type="variables_set" id="*ESO#Py`p`F/Wz!9BSv="><field name="VAR" id="/LbQoh=DX[$OI.LKtmwR">playerIcons</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text" id="}uSE]0oqL[Xoo[]=|e(p"><field name="TEXT">ABCDEFGHIJKLMNOPQRSTUVWXYZ</field></block></value><next><block type="typescript_statement" id="WKKCqA!_/bRfp3AI;^t#" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Player {" line1="    id: number;" line2="    icon: number;" line3="    health: HealthState;" line4="    show() {" line5="        basic.showString(playerIcons[this.icon]);" line6="    }" line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="Fk!XndI3P1tfJb/*2m/0" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let state = GameState.Stopped;" numlines="1" declaredvars="state"></mutation><next><block type="typescript_statement" id="`llzO6oJfw4Nh88?Pz~t" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let patientZero: Player;" numlines="1" declaredvars="patientZero"></mutation><next><block type="variables_set" id="*)-]fdQQ26,MM/B}Q|sx"><field name="VAR" id="rtIIb|TCOh9DZF/]p$}D">infectedBy</field><comment pinned="false" h="80" w="160">who infected (playerIcon)</comment><value name="VALUE"><shadow type="math_number" id=",vo#N=yR5Um+X~jWu-#h"><field name="NUM">-1</field></shadow></value><next><block type="variables_set" id="uH]3ug[^]ltH)R]$MIjF"><field name="VAR" id="iosq;cE6MF7T`AaY?oZ-">playerIcon</field><comment pinned="false" h="80" w="160">player icon and identity</comment><value name="VALUE"><shadow type="math_number" id="(HF6{?)p^uHcqp-ml(Vd"><field name="NUM">-1</field></shadow></value><next><block type="typescript_statement" id="V+{I3qOGF5.dT7$KG9T)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let health = HealthState.Healthy;" numlines="1" declaredvars="health"></mutation><next><block type="radio_set_group" id=".iFKH?vN1?Hw{gh9o1VM"><value name="ID"><shadow type="math_number_minmax" id="s]v_-aKlA|8GLo^V?8~k"><mutation min="0" max="255" label="Number" precision="0"></mutation><field name="SLIDER">42</field></shadow></value><next><block type="typescript_statement" id="j42d(CJK.sS%0T:#aQ%]" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="basic.showIcon(GameIcons.Pairing)" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="device_button_event" id="~J.Hkt~Oi|dza`(td3?0" x="663" y="0"><field name="NAME">Button.AB</field><statement name="HANDLER"><block type="controls_if" id=",4|(CyG-ZU]3Hcj+f?=]"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_operation" id="E!,ny0iT-v@njcX]sBV2"><field name="OP">AND</field><value name="A"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="skoP_uf7i~ZykAr*Z7U("><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="rsOgQ[/HdQvZ4NI^4zis"><field name="VAR" id="RDz6{CrOshK)HH`pO2zQ">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="k/(F@bs9JUS^ABV]CVJK" editable="false"><field name="EXPRESSION">GameState.Stopped</field></block></value></block></value><value name="B"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="D!,^1:yn%0^9pF9T}dQ."><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="X%%PvycHMb:[:HLqARpE"><field name="VAR" id="bV1d`(a?;`:{w$-mGgq/">master</field></block></value></block></value></block></value><statement name="DO0"><block type="variables_set" id="R=3L4cw)p`;?aa[e57`y"><field name="VAR" id="bV1d`(a?;`:{w$-mGgq/">master</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="q/zvJ6R_1{X9eZ*g+(M)"><field name="BOOL">TRUE</field></block></value><next><block type="variables_set" id="%I9`BBUq:?CkfPomNC$9"><field name="VAR" id="$~^;L44tXWd?FF!uYaM~">paired</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="MpjbpUpSYenlYOxOg7g$"><field name="BOOL">TRUE</field></block></value><next><block type="typescript_statement" id=",gOEFwZ8?AMSYAQx;OOJ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Pairing;" numlines="1"></mutation><next><block type="serial_writeline" id="Eze9[St{pEf`B1eviZaX"><value name="text"><shadow type="text" id="K,!Q74O3odD.gJE-]c`Z"><field name="TEXT">registered as master</field></shadow></value><next><block type="radio_set_transmit_power" id="(isfO6.Dzz?@8S0IYcHc"><value name="power"><shadow type="math_number_minmax" id="Vd*PL6%dNx,ouWZt5ObG"><mutation min="0" max="7" label="Number" precision="0"></mutation><field name="SLIDER">7</field></shadow></value><next><block type="device_print_message" id="Vs-0)P8=I9F^MHF^h]H#"><value name="text"><shadow type="text" id="dd`?|q584=J;348P]bM/"><field name="TEXT">0</field></shadow></value><next><block type="typescript_statement" id="rSXTvV*.)QLFv]lf$_~^" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type="controls_if" id="*c$O|f+jJ{zoZ5ZdOw$x"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="uE/z]aR]OP:bJ5%#G_Zj"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="m%0gb8U.VC;N`^v;7=;*"><field name="VAR" id="bV1d`(a?;`:{w$-mGgq/">master</field></block></value></block></value><statement name="DO0"><block type="typescript_statement" id="6.beGI-~5lR^$wzhwI+V" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="return;" numlines="1"></mutation></block></statement><next><block type="controls_if" id="oerg}}MzZPr=liS5r*O$"><mutation elseif="1"></mutation><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="TZ@U~G|XHdnTnW5sQbo]"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="HQf=Ug6m]C8f;`L|C+TO"><field name="VAR" id="RDz6{CrOshK)HH`pO2zQ">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="pO/`h+gN[U*.mr7U!*2y" editable="false"><field name="EXPRESSION">GameState.Pairing</field></block></value></block></value><statement name="DO0"><block type="variables_set" id="W?s`15qMl{W8yeN@_aUV"><field name="VAR" id="vt5rNx;d=#(K)HK.y|9,">patientZero</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="U**j.fZos|o30+KsU9mp"><value name="LIST"><block type="variables_get" id="H!4N9I`*].fvR*T*9Chd"><field name="VAR" id="~zhB;IP!~7h[}DxC!w(x">players</field></block></value><value name="INDEX"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="vi!+LE5@SKXi`ynA!6+7"><value name="min"><shadow type="math_number" id="]bF8QVo-5-JI5Q9UP]VZ"><field name="NUM">0</field></shadow></value><value name="limit"><block type="math_arithmetic" id="*1PEDW:J~q?$NWQl9joj"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="wO{oC};@{:Roe-/db2XT"><value name="VALUE"><block type="variables_get" id="qexq=?~H{#ywWEQ1fLBq"><field name="VAR" id="~zhB;IP!~7h[}DxC!w(x">players</field></block></value></block></value><value name="B"><shadow type="math_number" id="0koUVO$(S6CJ*{LXAJUj"><field name="NUM">1</field></shadow></value></block></value></block></value></block></value><next><block type="typescript_statement" id="f!:}^.ZyKfc;{*HY[r]Y" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Infecting;" numlines="1"></mutation><next><block type="serial_writeline" id="N,IGmQ`wHj/Fs}LM0gbe"><value name="text"><block type="typescript_expression" id="Cn5FnmiA)_TJh%2RJcS=" editable="false"><field name="EXPRESSION">`game started ${players.length} players`</field></block></value></block></next></block></next></block></statement><value name="IF1"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="p3sbHl+[hrpt~thQuQdU"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="83NJ8@uA7XKEHU#+9LQf"><field name="VAR" id="RDz6{CrOshK)HH`pO2zQ">state</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="6%_enRoJn767fKDSzk=|" editable="false"><field name="EXPRESSION">GameState.Running</field></block></value></block></value><statement name="DO1"><block type="function_call" id="8r?@D*_X]KETlxdU;g`a"><mutation name="gameOver" functionid="$n=IQA@kV9K|3Fs+A}.s"></mutation></block></statement></block></next></block></next></block></statement></block><block type="device_forever" id="P/{9bLId.5)[}v!OFmBT" x="1817" y="0"><statement name="HANDLER"><block type="typescript_statement" id="+uL:NNZ^a,kg{##nL9+w" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let message: Message;" numlines="1" declaredvars="message"></mutation><next><block type="controls_if" id="b^`h=CS?-H0qpZ9Ty}Ih"><mutation else="1"></mutation><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="#4vzgwrhF*]4D@|q~j+h"><field name="VAR" id="bV1d`(a?;`:{w$-mGgq/">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="7YiB$|.P(Kb4]V1_$U}6" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // tell each player they are registered" line3="                for (const t of players) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairConfirmation;" line6="                    message.value = t.icon;" line7="                    message.toSerialNumber = t.id;" line8="                    message.send();" line9="                }" line10="                serial.writeLine(`pairing ${players.length} players`);" line11="                basic.pause(500);" line12="                break;" line13="            case GameState.Infecting:" line14="                if (patientZero.health == HealthState.Healthy) {" line15="                    message = new Message();" line16="                    message.kind = MessageKind.InitialInfect;" line17="                    message.toSerialNumber = patientZero.id;" line18="                    message.send();" line19="                    basic.pause(100);" line20="                } else {" line21="                    serial.writeLine(`patient ${patientZero.id} infected`);" line22="                    // show startup" line23="                    basic.showIcon(GameIcons.Dead);" line24="                    state = GameState.Running;" line25="                }" line26="                break;" line27="            case GameState.Running:" line28="                for (const u of players) {" line29="                    message = new Message();" line30="                    message.kind = MessageKind.HealthSet;" line31="                    message.value = u.health;" line32="                    message.toSerialNumber = u.id;" line33="                    message.send();" line34="                }" line35="                break;" line36="            case GameState.Over:" line37="                if (patientZero)" line38="                    patientZero.show();" line39="                break;" line40="        }" numlines="41"></mutation><next><block type="typescript_statement" id="BtPOn($p$W!}}NZ%:XEg" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message = new Message()" numlines="1"></mutation><next><block type="typescript_statement" id="1o^}0:xPe0J?ZuLI9a0f" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.kind = MessageKind.GameState;" numlines="1"></mutation><next><block type="typescript_statement" id="Sn;|%b8,p4LCX/)]RjXh" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.value = state;" numlines="1"></mutation><next><block type="typescript_statement" id="}1T^gSfPR2JgyvQ3@7$R" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="message.send();" numlines="1"></mutation></block></next></block></next></block></next></block></next></block></statement><statement name="ELSE"><block type="typescript_statement" id="m[Im@BHqaDn;meZPk,PH" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="            case GameState.Pairing:" line2="                // broadcast player id" line3="                if (playerIcon &lt; 0) {" line4="                    message = new Message();" line5="                    message.kind = MessageKind.PairRequest;" line6="                    message.fromSerialNumber = control.deviceSerialNumber();" line7="                    message.send();" line8="                } else if (infectedBy &gt; -1) {" line9="                    message = new Message();" line10="                    message.kind = MessageKind.HealthValue;" line11="                    message.fromSerialNumber = control.deviceSerialNumber();" line12="                    message.value = health;" line13="                    message.send();" line14="                }" line15="                break;" line16="            case GameState.Infecting:" line17="                message = new Message();" line18="                message.kind = MessageKind.HealthValue;" line19="                message.fromSerialNumber = control.deviceSerialNumber();" line20="                message.value = health;" line21="                message.send();" line22="                break;" line23="            case GameState.Running:" line24="                // update health status" line25="                if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; DEATH)" line26="                    health = HealthState.Dead;" line27="                else if (health != HealthState.Healthy &amp;&amp; input.runningTime() - infectedTime &gt; INCUBATION)" line28="                    health = HealthState.Sick;" line29="                // transmit disease" line30="                if (health == HealthState.Incubating || health == HealthState.Sick) {" line31="                    message = new Message();" line32="                    message.kind = MessageKind.TransmitVirus;" line33="                    message.fromSerialNumber = control.deviceSerialNumber();" line34="                    message.value = playerIcon;" line35="                    message.send();" line36="                }" line37="                message = new Message();" line38="                message.kind = MessageKind.HealthValue;" line39="                message.fromSerialNumber = control.deviceSerialNumber();" line40="                message.value = health;" line41="                message.send();" line42="                break;" line43="        }" numlines="44"></mutation><next><block type="function_call" id="J?q.])q7r]{*8E]z;vg_"><mutation name="gameFace" functionid="}4Ih-]]-9QA34)|BvuJ:"></mutation></block></next></block></statement></block></next></block></statement></block><block type="radio_on_buffer_drag" id="1JZO+gn@]gwL)Z,QS=Er" x="2927" y="0"><value name="HANDLER_DRAG_PARAM_receivedBuffer"><shadow type="argument_reporter_custom" id="J|v,.7oO(F%[:dAnmN1J"><mutation typename="Buffer"></mutation><field name="VALUE">receivedBuffer</field></shadow></value><statement name="HANDLER"><block type="typescript_statement" id="$a~*3ioC9XF]p2LS+L{N" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const incomingMessage = new Message(receivedBuffer);" numlines="1" declaredvars="incomingMessage"></mutation><next><block type="variables_set" id=":V@qzgX31M299lMouSzT"><field name="VAR" id=".Pb?gG-Rg#sj5(?U)=qF">signal</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="radio_received_packet" id="=.!$C7zOwH{+v~F|JFkf"><value name="type"><shadow type="radio_packet_property" id="Q@iWbsvl6H[7{CZS}Y0E"><field name="note">RadioPacketProperty.SignalStrength</field></shadow></value></block></value><next><block type="controls_if" id="*ZSeX:ie4xAHNf`+DX!/"><mutation else="1"></mutation><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="LO02QP[X_Z7L18s9MYA)"><field name="VAR" id="bV1d`(a?;`:{w$-mGgq/">master</field></block></value><statement name="DO0"><block type="typescript_statement" id="#8WqXvxUZgJC[G+{,Irm" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.PairRequest:" line2="                // register player" line3="                let n = players.length;" line4="                player(incomingMessage.fromSerialNumber);" line5="                // show player number if changed" line6="                if (n != players.length) {" line7="                    basic.showNumber(players.length);" line8="                }" line9="                break;" line10="            case MessageKind.HealthValue:" line11="                let s = player(incomingMessage.fromSerialNumber);" line12="                s.health = incomingMessage.value;" line13="                // check if all infected" line14="                if (allDead())" line15="                    gameOver();" line16="                break;" line17="        }" numlines="18"></mutation></block></statement><statement name="ELSE"><block type="typescript_statement" id="{w=9u,!=1[/o2l*T2aj2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (incomingMessage.kind) {" line1="            case MessageKind.GameState:" line2="                // update game state" line3="                state = incomingMessage.value as GameState;" line4="                break;" line5="            case MessageKind.InitialInfect:" line6="                if (infectedBy &lt; 0 &amp;&amp;" line7="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line8="                    // infected by master" line9="                    infectedBy = 0; // infected my master" line10="                    infectedTime = input.runningTime();" line11="                    health = HealthState.Incubating;" line12="                    serial.writeLine(`infected ${control.deviceSerialNumber()}`);" line13="                }" line14="                break;" line15="            case MessageKind.HealthSet:" line16="                if (incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line17="                    const newHealth = incomingMessage.value;" line18="                    if (health &lt; newHealth) {" line19="                        health = newHealth;" line20="                    }" line21="                }" line22="                break;" line23="            case MessageKind.PairConfirmation:" line24="                if (!paired &amp;&amp; state == GameState.Pairing &amp;&amp;" line25="                    incomingMessage.toSerialNumber == control.deviceSerialNumber()) {" line26="                    // paired!" line27="                    serial.writeLine(`player paired ==&gt; ${control.deviceSerialNumber()}`)" line28="                    playerIcon = incomingMessage.value;" line29="                    paired = true;" line30="                }" line31="                break;" line32="            case MessageKind.TransmitVirus:" line33="                if (state == GameState.Running) {" line34="                    if (health == HealthState.Healthy) {" line35="                        serial.writeLine(`signal: ${signal}`);" line36="                        if (signal &gt; RSSI &amp;&amp;" line37="                            randint(0, 100) &gt; TRANSMISSIONPROB) {" line38="                            infectedBy = incomingMessage.value;" line39="                            infectedTime = input.runningTime();" line40="                            health = HealthState.Incubating;" line41="                        }" line42="                    }" line43="                }" line44="                break;" line45="            case MessageKind.HealthValue:" line46="                if (health != HealthState.Dead &amp;&amp; signal &gt; RSSI) {" line47="                    game.addScore(1);" line48="                }" line49="                break;" line50="        }" numlines="51"></mutation></block></statement></block></next></block></next></block></statement></block><block type="function_definition" id="F1BkZt#W[|.kPtaoh-bG" x="3875" y="0"><mutation name="player" functionid="1v3pqf,`#0vU=nR3@eOM"><arg name="id" id="b182udiz86pr192lamahb" type="number"></arg></mutation><field name="function_name">player</field><comment pinned="false" h="80" w="160">get a player instance (creates one as needed)</comment><statement name="STACK"><block type="pxt_controls_for_of" id="-qri@s@_8`8@qO#nULHA"><value name="VAR"><shadow type="variables_get_reporter" id="uFs;U43QM*~@ISPp6L4v"><field name="VAR" id="[3FG~j%/iy4lX#zdkt~`">p</field></shadow></value><value name="LIST"><block type="variables_get" id="jE7RS/,RAwS{GfJW3hRD"><field name="VAR" id="~zhB;IP!~7h[}DxC!w(x">players</field></block></value><statement name="DO"><block type="controls_if" id="f2X^Fq_YJ=dZ3K?xV@)~"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="oMX^qmM^}HV=oL@]2=3R"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="tpJk=Ym|C]mYpN;))D[W" editable="false"><field name="EXPRESSION">p.id</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id=")`EkM^X(;NT*Svu5t`a$"><field name="VALUE">id</field></block></value></block></value><statement name="DO0"><block type="function_return" id="*Y[3A(R8TNB?G6Ch3Wzq"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="IlV?D@r#,g%b{Xif.:UF"><field name="VAR" id="[3FG~j%/iy4lX#zdkt~`">p</field></block></value></block></statement></block></statement><next><block type="typescript_statement" id="+WzcF6Q`@5/7F/:6yhv}" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let q = new Player();" numlines="1" declaredvars="q"></mutation><next><block type="typescript_statement" id="B~ou]HMX@7cX8$SNh4Nd" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.id = id;" numlines="1"></mutation><next><block type="typescript_statement" id="![Lyt_YvBC4Alou-N`^2" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.icon = (players.length + 1) % playerIcons.length;" numlines="1"></mutation><next><block type="typescript_statement" id="|%,XEWz=`j:0bh@+H=tB" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="q.health = HealthState.Healthy;" numlines="1"></mutation><next><block type="array_push" id="{_nLwzq`+V=J$^v/V-XG"><value name="list"><block type="variables_get" id="%C3T2=]c$^w12EGq9oRg"><field name="VAR" id="~zhB;IP!~7h[}DxC!w(x">players</field></block></value><value name="value"><block type="variables_get" id="/rs%`(P|O-aO#X{!q6,$"><field name="VAR" id="|Md$@+BlYp,e9Co7Pc$h">q</field></block></value><next><block type="serial_writeline" id="jSqdms@qA4aZ8$lC:+6P"><value name="text"><block type="typescript_expression" id="(1v7[*,3[S/557ltx:f(" editable="false"><field name="EXPRESSION">`player ==&gt; ${q.id}`</field></block></value><next><block type="function_return" id="KN0*TI,k~fo1km%Rs*(5"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="?Zud;wU^9H=5HtJ]?y@y"><field name="VAR" id="|Md$@+BlYp,e9Co7Pc$h">q</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="lJ:cV*C{ZMA|o+M3qlXP" x="4442" y="0"><mutation name="allDead" functionid="pQ(?Z+$QSY`J?,rr^+D2"></mutation><field name="function_name">allDead</field><statement name="STACK"><block type="pxt_controls_for_of" id="9bJ6rPpi4qNsF8PmbDgW"><value name="VAR"><shadow type="variables_get_reporter" id="xPz8Nt);t|5QnIal?(cf"><field name="VAR" id="F*a`Hik_~O=mz^=Ec!D;">r</field></shadow></value><value name="LIST"><block type="variables_get" id="zFl6ePJ|s;=AsHIJT_I/"><field name="VAR" id="~zhB;IP!~7h[}DxC!w(x">players</field></block></value><statement name="DO"><block type="controls_if" id="%nVIJblgR11BaXNmKIy`"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="d=L=Xt#cu*r$eIqXgcuY"><field name="OP">NEQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="]z3DPh`DVHl46DeP|cBT" editable="false"><field name="EXPRESSION">r.health</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="sQK*QK6*Mj@DM4,7k=YL" editable="false"><field name="EXPRESSION">HealthState.Dead</field></block></value></block></value><statement name="DO0"><block type="function_return" id="u[|x-x+4N?0fu8)esnl^"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="u4o8FB$_!KTE#@Fo_dzl"><field name="BOOL">FALSE</field></block></value></block></statement></block></statement><next><block type="function_return" id="*J*%}mY9P#V$yKhL1u6G"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="as4WDKW^r/d^lFW$rbb8"><field name="BOOL">TRUE</field></block></value></block></next></block></statement></block><block type="function_definition" id="r:srEG6(%hPzV3luI{St" x="5024" y="0"><mutation name="gameOver" functionid="$n=IQA@kV9K|3Fs+A}.s"></mutation><field name="function_name">gameOver</field><statement name="STACK"><block type="typescript_statement" id="M45Vh6AwCJK}t~I!O*8)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="state = GameState.Over;" numlines="1"></mutation><next><block type="controls_if" id="r4;sI9xGOBiKWhS?dyT7"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="g)(]$N[)ERk6qOJ,DFtJ"><field name="VAR" id="vt5rNx;d=#(K)HK.y|9,">patientZero</field></block></value><statement name="DO0"><block type="typescript_statement" id="T@rwn#cd3~88Bg:estoW" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="patientZero.show();" numlines="1"></mutation></block></statement></block></next></block></statement></block><block type="function_definition" id="Z_hI-_t#Q-%MEo{_3A$S" x="5337" y="0"><mutation name="gameFace" functionid="}4Ih-]]-9QA34)|BvuJ:"></mutation><field name="function_name">gameFace</field><statement name="STACK"><block type="typescript_statement" id="Gj(oaoPyCzyf^?bTRDe8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="switch (state) {" line1="        case GameState.Stopped:" line2="            basic.showIcon(GameIcons.Pairing);" line3="            break;" line4="        case GameState.Pairing:" line5="            if (playerIcon &gt; -1)" line6="                basic.showString(playerIcons[playerIcon]);" line7="            else" line8="                basic.showIcon(paired ? GameIcons.Paired : GameIcons.Pairing, 1);" line9="            break;" line10="        case GameState.Infecting:" line11="        case GameState.Running:" line12="            switch (health) {" line13="                case HealthState.Dead:" line14="                    basic.showIcon(GameIcons.Dead, 1);" line15="                    break;" line16="                case HealthState.Sick:" line17="                    basic.showIcon(GameIcons.Sick, 1);" line18="                    break;" line19="                default:" line20="                    basic.showIcon(GameIcons.Healthy, 1);" line21="                    break;" line22="            }" line23="            break;" line24="        case GameState.Over:" line25="            // show id" line26="            basic.showString(playerIcons[playerIcon]);" line27="            basic.pause(2000);" line28="            // show health" line29="            switch (health) {" line30="                case HealthState.Dead:" line31="                    basic.showIcon(GameIcons.Dead, 2000);" line32="                    break;" line33="                case HealthState.Sick:" line34="                    basic.showIcon(GameIcons.Sick, 2000);" line35="                    break;" line36="                case HealthState.Incubating:" line37="                    basic.showIcon(GameIcons.Incubating, 2000);" line38="                    break;" line39="                default:" line40="                    basic.showIcon(GameIcons.Healthy, 2000);" line41="                    break;" line42="            }" line43="            // show how infected" line44="            if (infectedBy &gt; -1) {" line45="                basic.showString(&quot; INFECTED BY&quot;);" line46="                basic.showString(playerIcons[infectedBy]);" line47="                basic.pause(2000);" line48="            } else {" line49="                basic.showString(&quot; PATIENT ZERO&quot;);" line50="                basic.pause(2000);" line51="            }" line52="            // show score" line53="            game.showScore();" line54="            basic.pause(1000);" line55="            break;" line56="    }" numlines="57"></mutation></block></statement></block></xml>